#!/bin/bash
# Simple bash shell script to launch SpinS using the LTSmin backend


COMMAND=`perl -e 'use Cwd "abs_path";print abs_path(shift)' $0`

# the following variables are initialised by "configure"
LTSMIN_VERSION="@VERSION@"
LTSMIN_PREFIX="@prefix@"
LTSMIN_LIB="@pkglibdir@"
LTSMIN_SRCDIR="@top_srcdir@"
LTSMIN_SRCDIR="`dirname $COMMAND`/$LTSMIN_SRCDIR"

spins_dir="$LTSMIN_PREFIX/share/ltsmin"
spins_dir2="$LTSMIN_SRCDIR/spins"

CP="$spins_dir/spins.jar"
if [ ! -e $CP ]; then
    spins_dir=$spins_dir2
fi
CP="$spins_dir/spins.jar"

CYGPATH=`which cygpath 2> /dev/null`
if [ ! -z "$CYGPATH" ]; then
    CP=`cygpath -wp "$CP"`
fi

promela_file=
no_compile=0

for option in ${1+"$@"}; do
    if [ "${option:0:2}" == "-I" ]; then
        no_compile=1
    elif [ "${option:0:1}" != "-" ]; then
        promela_file="$option"
    fi
done

if [ -z "$promela_file" ]; then
    echo "usage: spins [options] promela_file" ;
    echo "options will be passed to GCC"
    exit 1
fi

promela_name=`basename $promela_file`
output_file="${promela_name}.spins.c"

if [ -f "$output_file" ]; then
    rm -f "$output_file";
fi

# Total memory in KB
if [ -e /proc/meminfo ]; then 
    totalMemKB=`awk '/MemTotal:/ { print $2 }' /proc/meminfo`
    totalMemMB=$(( $totalMemKB/1024 ))
else
    totalMem=`top -l 1 | grep PhysMem:`
    totalMemMB=`echo "$totalMem" | sed "s/PhysMem:[ ]*\([0-9]*\)M.*/\1/g"`
    if [ "$totalMem" = "$totalMemMB" ]; then
        totalMemGB=`echo "$totalMem" | sed "s/PhysMem:[ ]*\([0-9]*\)G.*/\1/g"`
        totalMemMB=$(( $totalMemGB*1024 ))
    fi
fi
heapMB=$(( $totalMemMB*100/75 ))
commitedMB=$(( $heapMB/2 ))

java -Xms${commitedMB}m -Xmx${heapMB}m -Xss64m -cp $CP spins.Compile ${1+"$@"}
ERROR=$?
if [ $ERROR -ne 0 ]; then
    echo "Compilation of $promela_file failed"
    exit $ERROR;
fi

if [ $no_compile == 1 ]; then
    echo
    exit 0
fi

gcc -fPIC -shared -O2 -ggdb $CFLAGS $output_file -o $promela_name.spins \
    -Wno-parentheses-equality \
    -Wno-initializer-overrides \
    -Wno-unused-but-set-variable \
    -Wno-unknown-warning-option
if [ ! $? -eq 0 ]; then
    echo "Compilation of $output_file failed"
else
    echo "Compiled C model to $promela_name.spins"
fi
