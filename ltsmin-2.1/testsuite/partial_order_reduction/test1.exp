source $srcdir/lib/include.tcl

if { [file exists $binpaths(out) ] != 1 } {
    file mkdir $binpaths(out)
}
cd $binpaths(out)

puts "\n----------------------------------------------"
puts   "TESTING: Partial Order Reduction Algorithms"
puts   "----------------------------------------------\n"

set commands [dict create]

# SAFETY TESTS

compile_promela {"i4" "p312.pml"}

# TEST 12

dict set commands test12_seq cmd "$binpaths(dve2lts-seq) -d --por -n $EXAMPLES_PATH/gear.1.dve"
dict set commands test12_seq exp "Deadlocks: 16"

dict set commands test12_mc cmd "$binpaths(dve2lts-mc) -d --por -n $EXAMPLES_PATH/gear.1.dve"
dict set commands test12_mc exp "Deadlocks: 16"

dict set commands test12_dist cmd "$binpaths(dve2lts-dist) --por -d -n $EXAMPLES_PATH/gear.1.dve"
dict set commands test12_dist exp "Deadlocks: 16"

# TEST 13:

dict set commands test13_seq cmd "$binpaths(prom2lts-seq) i4.spins -d --por -n"
dict set commands test13_seq exp "Deadlocks: 501"

dict set commands test13_mc cmd "$binpaths(prom2lts-mc) i4.spins -d --por -n"
dict set commands test13_mc exp "Deadlocks: 501"

dict set commands test13_dist cmd "$binpaths(prom2lts-dist) i4.spins --por -d -n"
dict set commands test13_dist exp "Deadlocks: 501"

# TEST 14:

dict set commands test14_seq cmd "$binpaths(prom2lts-seq) p312.pml.spins --por --action=assert --trace=t14_seq.gcf"
dict set commands test14_seq exp ""

dict set commands test14_mc cmd "$binpaths(prom2lts-mc) p312.pml.spins --por --action=assert --trace=t14_mc.gcf"
dict set commands test14_mc exp ""

# TEST 15:

dict set commands test15_seq cmd "$binpaths(dve2lts-seq) $EXAMPLES_PATH/elevator.3.dve --invariant=$EXAMPLES_PATH/elevator.3.inv --por -n"
dict set commands test15_seq exp ""

dict set commands test15_mc cmd "$binpaths(dve2lts-mc) $EXAMPLES_PATH/elevator.3.dve --invariant=$EXAMPLES_PATH/elevator.3.inv --por -n"
dict set commands test15_mc exp ""

# TEST 16 (invariants violations)

dict set commands test16_seq cmd "$binpaths(dve2lts-seq) $EXAMPLES_PATH/elevator.3.dve --por --invariant=$EXAMPLES_PATH/elevator.3-false.inv -n"
dict set commands test16_seq exp "violations: 3"

dict set commands test16_mc cmd "$binpaths(dve2lts-mc) $EXAMPLES_PATH/elevator.3.dve --por --invariant=$EXAMPLES_PATH/elevator.3-false.inv -n"
dict set commands test16_mc exp "violations: 3"


# LTL TESTS

# TEST 18:
dict set commands test18_mc cmd "$binpaths(dve2lts-mc) --por --proviso=cndfs --strategy=cndfs \
	-s22 $EXAMPLES_PATH/iprotocol.2.dve --ltl=$EXAMPLES_PATH/iprotocol.2.ltl"
dict set commands test18_mc exp "Accepting cycle FOUND"

# NOTE: the difference in the use of captitals in the expected output between this and previous test
dict set commands test18_seq cmd "$binpaths(dve2lts-seq) --por --strategy=scc \
	$EXAMPLES_PATH/iprotocol.2.dve --ltl=$EXAMPLES_PATH/iprotocol.2.ltl"
dict set commands test18_seq exp "accepting cycle found"

dict set commands test18_color cmd "$binpaths(dve2lts-seq) --por --strategy=scc \
	--proviso=color \
	$EXAMPLES_PATH/iprotocol.2.dve --ltl=$EXAMPLES_PATH/iprotocol.2.ltl"
dict set commands test18_color exp "accepting cycle found"


# TEST 19:

dict set commands test19_mc cmd [subst "$binpaths(dve2lts-mc) --strategy=cndfs \
	--por --proviso=cndfs \
	-s22 $EXAMPLES_PATH/elevator.3.dve --ltl=$EXAMPLES_PATH/elevator.3.ltl"]
dict set commands test19_mc exp "State space has 4"

dict set commands test19_seq cmd "$binpaths(dve2lts-seq) --strategy=scc \
	$EXAMPLES_PATH/elevator.3.dve --ltl=$EXAMPLES_PATH/elevator.3.ltl \
	--por"
dict set commands test19_seq exp "469532 states"

dict set commands test19_color cmd "$binpaths(dve2lts-seq) --strategy=scc --por \
	--proviso=color \
	$EXAMPLES_PATH/elevator.3.dve --ltl=$EXAMPLES_PATH/elevator.3.ltl"
dict set commands test19_color exp "469305 states"

foreach testcase [dict keys $commands] {
    set command [dict get $commands $testcase cmd]
    set exp [dict get $commands $testcase exp]

#    puts "$command"

    runmytest $testcase $command $exp
}


cd ".."
